// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using NZWalks.API.Data;

#nullable disable

namespace NZWalks.API.Migrations
{
    [DbContext(typeof(NZWalksDbContext))]
    [Migration("20241021124438_Seeding data for Difficulties and Regions")]
    partial class SeedingdataforDifficultiesandRegions
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("NZWalks.API.Models.Domain.Difficulty", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Difficullties");

                    b.HasData(
                        new
                        {
                            Id = new Guid("965ca9aa-ede5-4d5e-9953-425825fbb26a"),
                            Name = "Easy"
                        },
                        new
                        {
                            Id = new Guid("85e2bf78-c201-413c-af46-72ae1be9bcd4"),
                            Name = "Medium"
                        },
                        new
                        {
                            Id = new Guid("0d4317b2-5240-434a-9418-4ca70061abcc"),
                            Name = "Hard"
                        });
                });

            modelBuilder.Entity("NZWalks.API.Models.Domain.Region", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RegionImageUrl")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Regions");

                    b.HasData(
                        new
                        {
                            Id = new Guid("b74fcc6d-e2f4-4fd5-a228-15f00b13ee49"),
                            Code = "AKL",
                            Name = "Auckland",
                            RegionImageUrl = "https://example.com/images/auckland.jpg"
                        },
                        new
                        {
                            Id = new Guid("e678c8a4-5c92-4c98-8d22-36f30fdff920"),
                            Code = "WLG",
                            Name = "Wellington",
                            RegionImageUrl = "https://example.com/images/wellington.jpg"
                        },
                        new
                        {
                            Id = new Guid("8a3570ad-92c1-4b8d-a5bc-2cf2a8e030fb"),
                            Code = "CHC",
                            Name = "Christchurch",
                            RegionImageUrl = "https://example.com/images/christchurch.jpg"
                        },
                        new
                        {
                            Id = new Guid("f3b29cb1-eeb6-4b67-9f57-46cbb68fbbdf"),
                            Code = "HLZ",
                            Name = "Hamilton",
                            RegionImageUrl = "https://example.com/images/hamilton.jpg"
                        },
                        new
                        {
                            Id = new Guid("fa4d23ff-e52e-4b64-8e9e-29a2a1e5f993"),
                            Code = "TRG",
                            Name = "Tauranga",
                            RegionImageUrl = "https://example.com/images/tauranga.jpg"
                        },
                        new
                        {
                            Id = new Guid("d467fea9-cc5c-4855-8fd5-88d9f2d1ff1d"),
                            Code = "NPE",
                            Name = "Napier",
                            RegionImageUrl = "https://example.com/images/napier.jpg"
                        });
                });

            modelBuilder.Entity("NZWalks.API.Models.Domain.Walks", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("DifficultyID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<double>("LengthInKm")
                        .HasColumnType("float");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("RegionId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("WalkImageUrl")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("DifficultyID");

                    b.HasIndex("RegionId");

                    b.ToTable("Walks");
                });

            modelBuilder.Entity("NZWalks.API.Models.Domain.Walks", b =>
                {
                    b.HasOne("NZWalks.API.Models.Domain.Difficulty", "Difficulty")
                        .WithMany()
                        .HasForeignKey("DifficultyID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("NZWalks.API.Models.Domain.Region", "Region")
                        .WithMany()
                        .HasForeignKey("RegionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Difficulty");

                    b.Navigation("Region");
                });
#pragma warning restore 612, 618
        }
    }
}
